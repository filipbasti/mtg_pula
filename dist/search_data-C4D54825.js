searchData={"items":[{"type":"module","title":"MtgPula","doc":"MtgPula keeps the contexts that define your domain\nand business logic.\n\nContexts are also responsible for managing your data, regardless\nif it comes from the database, an external API or others.","ref":"MtgPula.html"},{"type":"module","title":"MtgPula.Accounts","doc":"The Accounts context.","ref":"MtgPula.Accounts.html"},{"type":"function","title":"MtgPula.Accounts.change_account/2","doc":"Returns an `%Ecto.Changeset{}` for tracking account changes.","ref":"MtgPula.Accounts.html#change_account/2"},{"type":"function","title":"Examples - MtgPula.Accounts.change_account/2","doc":"iex> change_account(account)\n    %Ecto.Changeset{data: %Account{}}","ref":"MtgPula.Accounts.html#change_account/2-examples"},{"type":"function","title":"MtgPula.Accounts.create_account/1","doc":"Creates a account.","ref":"MtgPula.Accounts.html#create_account/1"},{"type":"function","title":"Examples - MtgPula.Accounts.create_account/1","doc":"iex> create_account(%{field: value})\n    {:ok, %Account{}}\n\n    iex> create_account(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Accounts.html#create_account/1-examples"},{"type":"function","title":"MtgPula.Accounts.delete_account/1","doc":"Deletes a account.","ref":"MtgPula.Accounts.html#delete_account/1"},{"type":"function","title":"Examples - MtgPula.Accounts.delete_account/1","doc":"iex> delete_account(account)\n    {:ok, %Account{}}\n\n    iex> delete_account(account)\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Accounts.html#delete_account/1-examples"},{"type":"function","title":"MtgPula.Accounts.get_account!/1","doc":"Gets a single account.\n\nRaises `Ecto.NoResultsError` if the Account does not exist.","ref":"MtgPula.Accounts.html#get_account!/1"},{"type":"function","title":"Examples - MtgPula.Accounts.get_account!/1","doc":"iex> get_account!(123)\n    %Account{}\n\n    iex> get_account!(456)\n    ** (Ecto.NoResultsError)","ref":"MtgPula.Accounts.html#get_account!/1-examples"},{"type":"function","title":"MtgPula.Accounts.get_account_by_email/1","doc":"Gets a single account.any()\nReturns 'nil if the account does not exist","ref":"MtgPula.Accounts.html#get_account_by_email/1"},{"type":"function","title":"Examples - MtgPula.Accounts.get_account_by_email/1","doc":"iex> get_account_by_email(test@email.com)\n  %Account{}\n\n  iex> get_account_by_email(no_account@email.com)\n  nil","ref":"MtgPula.Accounts.html#get_account_by_email/1-examples"},{"type":"function","title":"MtgPula.Accounts.get_full_account/1","doc":"","ref":"MtgPula.Accounts.html#get_full_account/1"},{"type":"function","title":"MtgPula.Accounts.list_accounts/0","doc":"Returns the list of accounts.","ref":"MtgPula.Accounts.html#list_accounts/0"},{"type":"function","title":"Examples - MtgPula.Accounts.list_accounts/0","doc":"iex> list_accounts()\n    [%Account{}, ...]","ref":"MtgPula.Accounts.html#list_accounts/0-examples"},{"type":"function","title":"MtgPula.Accounts.update_account/2","doc":"Updates a account.","ref":"MtgPula.Accounts.html#update_account/2"},{"type":"function","title":"Examples - MtgPula.Accounts.update_account/2","doc":"iex> update_account(account, %{field: new_value})\n    {:ok, %Account{}}\n\n    iex> update_account(account, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Accounts.html#update_account/2-examples"},{"type":"module","title":"MtgPula.Accounts.Account","doc":"Represents an account schema.\n\nThis schema is used to store account-related information, such as email and hashed passwords.","ref":"MtgPula.Accounts.Account.html"},{"type":"module","title":"Fields - MtgPula.Accounts.Account","doc":"- `id` (binary_id): The unique identifier for the account (autogenerated).\n- `email` (string): The email address associated with the account.\n- `hash_password` (string): The hashed password for the account.\n- `inserted_at` (utc_datetime): The timestamp when the account was created.\n- `updated_at` (utc_datetime): The timestamp when the account was last updated.","ref":"MtgPula.Accounts.Account.html#module-fields"},{"type":"module","title":"Relationships - MtgPula.Accounts.Account","doc":"- `has_one :user`: Each account is associated with one user. See [`User Schema`](MtgPula.Users.User.html).","ref":"MtgPula.Accounts.Account.html#module-relationships"},{"type":"module","title":"Validations - MtgPula.Accounts.Account","doc":"- `email`: Must be present, unique, and formatted correctly (must include an `@` and no spaces).\n- `hash_password`: Must be present and hashed before saving.","ref":"MtgPula.Accounts.Account.html#module-validations"},{"type":"module","title":"Examples - MtgPula.Accounts.Account","doc":"# Creating a new account\n    attrs = %{email: \"test@example.com\", hash_password: \"password123\"}\n    changeset = MtgPula.Accounts.Account.changeset(%MtgPula.Accounts.Account{}, attrs)\n\n    if changeset.valid? do\n      Repo.insert(changeset)\n    else\n      IO.inspect(changeset.errors)\n    end","ref":"MtgPula.Accounts.Account.html#module-examples"},{"type":"function","title":"MtgPula.Accounts.Account.changeset/2","doc":"Creates a changeset for an account.","ref":"MtgPula.Accounts.Account.html#changeset/2"},{"type":"function","title":"Parameters - MtgPula.Accounts.Account.changeset/2","doc":"- `account` (struct): The account struct to update.\n- `attrs` (map): A map of attributes to apply to the changeset.","ref":"MtgPula.Accounts.Account.html#changeset/2-parameters"},{"type":"function","title":"Validations - MtgPula.Accounts.Account.changeset/2","doc":"- `email`: Must be present, unique, and formatted correctly (must include an `@` and no spaces).\n- `hash_password`: Must be present and hashed before saving.","ref":"MtgPula.Accounts.Account.html#changeset/2-validations"},{"type":"function","title":"Examples - MtgPula.Accounts.Account.changeset/2","doc":"iex> changeset(%MtgPula.Accounts.Account{}, %{email: \"test@example.com\", hash_password: \"password123\"})\n    %Ecto.Changeset{...}\n\n    iex> changeset(%MtgPula.Accounts.Account{}, %{email: nil})\n    %Ecto.Changeset{valid?: false, errors: [email: {\"can't be blank\", []}]}","ref":"MtgPula.Accounts.Account.html#changeset/2-examples"},{"type":"module","title":"MtgPula.Release","doc":"Used for executing DB release tasks when run in production without Mix\ninstalled.","ref":"MtgPula.Release.html"},{"type":"function","title":"MtgPula.Release.migrate/0","doc":"","ref":"MtgPula.Release.html#migrate/0"},{"type":"function","title":"MtgPula.Release.rollback/2","doc":"","ref":"MtgPula.Release.html#rollback/2"},{"type":"module","title":"MtgPula.Repo","doc":"","ref":"MtgPula.Repo.html"},{"type":"function","title":"MtgPula.Repo.aggregate/3","doc":"","ref":"MtgPula.Repo.html#aggregate/3"},{"type":"function","title":"MtgPula.Repo.aggregate/4","doc":"","ref":"MtgPula.Repo.html#aggregate/4"},{"type":"function","title":"MtgPula.Repo.all/2","doc":"","ref":"MtgPula.Repo.html#all/2"},{"type":"function","title":"MtgPula.Repo.checked_out?/0","doc":"","ref":"MtgPula.Repo.html#checked_out?/0"},{"type":"function","title":"MtgPula.Repo.checkout/2","doc":"","ref":"MtgPula.Repo.html#checkout/2"},{"type":"function","title":"MtgPula.Repo.child_spec/1","doc":"","ref":"MtgPula.Repo.html#child_spec/1"},{"type":"function","title":"MtgPula.Repo.config/0","doc":"","ref":"MtgPula.Repo.html#config/0"},{"type":"function","title":"MtgPula.Repo.default_options/1","doc":"","ref":"MtgPula.Repo.html#default_options/1"},{"type":"function","title":"MtgPula.Repo.delete/2","doc":"","ref":"MtgPula.Repo.html#delete/2"},{"type":"function","title":"MtgPula.Repo.delete!/2","doc":"","ref":"MtgPula.Repo.html#delete!/2"},{"type":"function","title":"MtgPula.Repo.delete_all/2","doc":"","ref":"MtgPula.Repo.html#delete_all/2"},{"type":"function","title":"MtgPula.Repo.disconnect_all/2","doc":"A convenience function for SQL-based repositories that forces all connections in the\npool to disconnect within the given interval.\n\nSee `Ecto.Adapters.SQL.disconnect_all/3` for more information.","ref":"MtgPula.Repo.html#disconnect_all/2"},{"type":"function","title":"MtgPula.Repo.exists?/2","doc":"","ref":"MtgPula.Repo.html#exists?/2"},{"type":"function","title":"MtgPula.Repo.explain/3","doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar\ndepending on the adapter to obtain statistics for the given query.\n\nSee `Ecto.Adapters.SQL.explain/4` for more information.","ref":"MtgPula.Repo.html#explain/3"},{"type":"function","title":"MtgPula.Repo.get/3","doc":"","ref":"MtgPula.Repo.html#get/3"},{"type":"function","title":"MtgPula.Repo.get!/3","doc":"","ref":"MtgPula.Repo.html#get!/3"},{"type":"function","title":"MtgPula.Repo.get_by/3","doc":"","ref":"MtgPula.Repo.html#get_by/3"},{"type":"function","title":"MtgPula.Repo.get_by!/3","doc":"","ref":"MtgPula.Repo.html#get_by!/3"},{"type":"function","title":"MtgPula.Repo.get_dynamic_repo/0","doc":"","ref":"MtgPula.Repo.html#get_dynamic_repo/0"},{"type":"function","title":"MtgPula.Repo.in_transaction?/0","doc":"","ref":"MtgPula.Repo.html#in_transaction?/0"},{"type":"function","title":"MtgPula.Repo.insert/2","doc":"","ref":"MtgPula.Repo.html#insert/2"},{"type":"function","title":"MtgPula.Repo.insert!/2","doc":"","ref":"MtgPula.Repo.html#insert!/2"},{"type":"function","title":"MtgPula.Repo.insert_all/3","doc":"","ref":"MtgPula.Repo.html#insert_all/3"},{"type":"function","title":"MtgPula.Repo.insert_or_update/2","doc":"","ref":"MtgPula.Repo.html#insert_or_update/2"},{"type":"function","title":"MtgPula.Repo.insert_or_update!/2","doc":"","ref":"MtgPula.Repo.html#insert_or_update!/2"},{"type":"function","title":"MtgPula.Repo.load/2","doc":"","ref":"MtgPula.Repo.html#load/2"},{"type":"function","title":"MtgPula.Repo.one/2","doc":"","ref":"MtgPula.Repo.html#one/2"},{"type":"function","title":"MtgPula.Repo.one!/2","doc":"","ref":"MtgPula.Repo.html#one!/2"},{"type":"function","title":"MtgPula.Repo.preload/3","doc":"","ref":"MtgPula.Repo.html#preload/3"},{"type":"function","title":"MtgPula.Repo.prepare_query/3","doc":"","ref":"MtgPula.Repo.html#prepare_query/3"},{"type":"function","title":"MtgPula.Repo.put_dynamic_repo/1","doc":"","ref":"MtgPula.Repo.html#put_dynamic_repo/1"},{"type":"function","title":"MtgPula.Repo.query/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query/4` for more information.","ref":"MtgPula.Repo.html#query/3"},{"type":"function","title":"MtgPula.Repo.query!/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query!/4` for more information.","ref":"MtgPula.Repo.html#query!/3"},{"type":"function","title":"MtgPula.Repo.query_many/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many/4` for more information.","ref":"MtgPula.Repo.html#query_many/3"},{"type":"function","title":"MtgPula.Repo.query_many!/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many!/4` for more information.","ref":"MtgPula.Repo.html#query_many!/3"},{"type":"function","title":"MtgPula.Repo.reload/2","doc":"","ref":"MtgPula.Repo.html#reload/2"},{"type":"function","title":"MtgPula.Repo.reload!/2","doc":"","ref":"MtgPula.Repo.html#reload!/2"},{"type":"function","title":"MtgPula.Repo.rollback/1","doc":"","ref":"MtgPula.Repo.html#rollback/1"},{"type":"function","title":"MtgPula.Repo.start_link/1","doc":"","ref":"MtgPula.Repo.html#start_link/1"},{"type":"function","title":"MtgPula.Repo.stop/1","doc":"","ref":"MtgPula.Repo.html#stop/1"},{"type":"function","title":"MtgPula.Repo.stream/2","doc":"","ref":"MtgPula.Repo.html#stream/2"},{"type":"function","title":"MtgPula.Repo.to_sql/2","doc":"A convenience function for SQL-based repositories that translates the given query to SQL.\n\nSee `Ecto.Adapters.SQL.to_sql/3` for more information.","ref":"MtgPula.Repo.html#to_sql/2"},{"type":"function","title":"MtgPula.Repo.transaction/2","doc":"","ref":"MtgPula.Repo.html#transaction/2"},{"type":"function","title":"MtgPula.Repo.update/2","doc":"","ref":"MtgPula.Repo.html#update/2"},{"type":"function","title":"MtgPula.Repo.update!/2","doc":"","ref":"MtgPula.Repo.html#update!/2"},{"type":"function","title":"MtgPula.Repo.update_all/3","doc":"","ref":"MtgPula.Repo.html#update_all/3"},{"type":"module","title":"MtgPula.Tournaments","doc":"The Tournaments context.","ref":"MtgPula.Tournaments.html"},{"type":"function","title":"MtgPula.Tournaments.assign_bye/1","doc":"Recursively uses find_pair, to pair players by their performance.\nIf there is a uneven number of players it gives the player that\nalready hasnt had a bye, a bye,\nif all players had a bye it takes the first player that cant be paired.\nIt returns an array of tuples of match pairs.","ref":"MtgPula.Tournaments.html#assign_bye/1"},{"type":"function","title":"MtgPula.Tournaments.backtrack_pairings/3","doc":"","ref":"MtgPula.Tournaments.html#backtrack_pairings/3"},{"type":"function","title":"MtgPula.Tournaments.calculate_gw/1","doc":"Calculates average opponents game win procentage from each game win that appears on certain tournament","ref":"MtgPula.Tournaments.html#calculate_gw/1"},{"type":"function","title":"MtgPula.Tournaments.calculate_ogp/1","doc":"Calculates average opponents game win procentage from players list of opponents","ref":"MtgPula.Tournaments.html#calculate_ogp/1"},{"type":"function","title":"MtgPula.Tournaments.calculate_points/1","doc":"Calculates points for a player","ref":"MtgPula.Tournaments.html#calculate_points/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.calculate_points/1","doc":"iex> calculate_points(player)\n    %Player{}","ref":"MtgPula.Tournaments.html#calculate_points/1-examples"},{"type":"function","title":"MtgPula.Tournaments.calculate_procentage_omw/2","doc":"Calculates average opponents match win procentage from players list of opponents","ref":"MtgPula.Tournaments.html#calculate_procentage_omw/2"},{"type":"function","title":"Examples - MtgPula.Tournaments.calculate_procentage_omw/2","doc":"","ref":"MtgPula.Tournaments.html#calculate_procentage_omw/2-examples"},{"type":"function","title":"MtgPula.Tournaments.calculate_tiebreakers/2","doc":"Calculates tiebreakers for a certain standings and tournament","ref":"MtgPula.Tournaments.html#calculate_tiebreakers/2"},{"type":"function","title":"Examples - MtgPula.Tournaments.calculate_tiebreakers/2","doc":"iex> calculate_tiebreakers(standings, tournament)\n    [%Player{}, ...]","ref":"MtgPula.Tournaments.html#calculate_tiebreakers/2-examples"},{"type":"function","title":"MtgPula.Tournaments.change_match/2","doc":"Returns an `%Ecto.Changeset{}` for tracking match changes.","ref":"MtgPula.Tournaments.html#change_match/2"},{"type":"function","title":"Examples - MtgPula.Tournaments.change_match/2","doc":"iex> change_match(match)\n    %Ecto.Changeset{data: %Match{}}","ref":"MtgPula.Tournaments.html#change_match/2-examples"},{"type":"function","title":"MtgPula.Tournaments.change_player/2","doc":"Returns an `%Ecto.Changeset{}` for tracking player changes.","ref":"MtgPula.Tournaments.html#change_player/2"},{"type":"function","title":"Examples - MtgPula.Tournaments.change_player/2","doc":"iex> change_player(player)\n    %Ecto.Changeset{data: %Player{}}","ref":"MtgPula.Tournaments.html#change_player/2-examples"},{"type":"function","title":"MtgPula.Tournaments.change_tournament/2","doc":"Returns an `%Ecto.Changeset{}` for tracking tournament changes.","ref":"MtgPula.Tournaments.html#change_tournament/2"},{"type":"function","title":"Examples - MtgPula.Tournaments.change_tournament/2","doc":"iex> change_tournament(tournament)\n    %Ecto.Changeset{data: %Tournament{}}","ref":"MtgPula.Tournaments.html#change_tournament/2-examples"},{"type":"function","title":"MtgPula.Tournaments.create_match/1","doc":"","ref":"MtgPula.Tournaments.html#create_match/1"},{"type":"function","title":"MtgPula.Tournaments.create_player/1","doc":"Creates a player.","ref":"MtgPula.Tournaments.html#create_player/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.create_player/1","doc":"iex> create_player(%{field: value})\n    {:ok, %Player{}}\n\n    iex> create_player(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Tournaments.html#create_player/1-examples"},{"type":"function","title":"MtgPula.Tournaments.create_tournament/1","doc":"Creates a tournament.","ref":"MtgPula.Tournaments.html#create_tournament/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.create_tournament/1","doc":"iex> create_tournament(%{field: value})\n    {:ok, %Tournament{}}\n\n    iex> create_tournament(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Tournaments.html#create_tournament/1-examples"},{"type":"function","title":"MtgPula.Tournaments.current_matches/1","doc":"Finds and returns the current round  matches","ref":"MtgPula.Tournaments.html#current_matches/1"},{"type":"function","title":"MtgPula.Tournaments.delete_match/1","doc":"Deletes a match.","ref":"MtgPula.Tournaments.html#delete_match/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.delete_match/1","doc":"iex> delete_match(match)\n    {:ok, %Match{}}\n\n    iex> delete_match(match)\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Tournaments.html#delete_match/1-examples"},{"type":"function","title":"MtgPula.Tournaments.delete_player/1","doc":"Deletes a player.","ref":"MtgPula.Tournaments.html#delete_player/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.delete_player/1","doc":"iex> delete_player(player)\n    {:ok, %Player{}}\n\n    iex> delete_player(player)\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Tournaments.html#delete_player/1-examples"},{"type":"function","title":"MtgPula.Tournaments.delete_tournament/1","doc":"Deletes a tournament.","ref":"MtgPula.Tournaments.html#delete_tournament/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.delete_tournament/1","doc":"iex> delete_tournament(tournament)\n    {:ok, %Tournament{}}\n\n    iex> delete_tournament(tournament)\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Tournaments.html#delete_tournament/1-examples"},{"type":"function","title":"MtgPula.Tournaments.drop_player/1","doc":"","ref":"MtgPula.Tournaments.html#drop_player/1"},{"type":"function","title":"MtgPula.Tournaments.find_pair/2","doc":"Goes through all the players that\n    are left to match them to a player that hasnt been paired with already.","ref":"MtgPula.Tournaments.html#find_pair/2"},{"type":"function","title":"MtgPula.Tournaments.get_match!/1","doc":"Gets a single match.\n\nRaises `Ecto.NoResultsError` if the Match does not exist.","ref":"MtgPula.Tournaments.html#get_match!/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.get_match!/1","doc":"iex> get_match!(123)\n    %Match{}\n\n    iex> get_match!(456)\n    ** (Ecto.NoResultsError)","ref":"MtgPula.Tournaments.html#get_match!/1-examples"},{"type":"function","title":"MtgPula.Tournaments.get_player!/1","doc":"Gets a single player.\n\nRaises `Ecto.NoResultsError` if the Player does not exist.","ref":"MtgPula.Tournaments.html#get_player!/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.get_player!/1","doc":"iex> get_player!(123)\n    %Player{}\n\n    iex> get_player!(456)\n    ** (Ecto.NoResultsError)","ref":"MtgPula.Tournaments.html#get_player!/1-examples"},{"type":"function","title":"MtgPula.Tournaments.get_tournament!/1","doc":"Gets a single tournament.\n\nRaises `Ecto.NoResultsError` if the Tournament does not exist.","ref":"MtgPula.Tournaments.html#get_tournament!/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.get_tournament!/1","doc":"iex> get_tournament!(123)\n    %Tournament{}\n\n    iex> get_tournament!(456)\n    ** (Ecto.NoResultsError)","ref":"MtgPula.Tournaments.html#get_tournament!/1-examples"},{"type":"function","title":"MtgPula.Tournaments.get_tournament_by_join_code/1","doc":"Gets a tournament by join code.","ref":"MtgPula.Tournaments.html#get_tournament_by_join_code/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.get_tournament_by_join_code/1","doc":"iex> get_tournament_by_join_code(\"123456\")\n    %Tournament{}\n\n    iex> get_tournament_by_join_code(\"123456\")\n    nil","ref":"MtgPula.Tournaments.html#get_tournament_by_join_code/1-examples"},{"type":"function","title":"MtgPula.Tournaments.list_all_tournament_players/1","doc":"Lists all players added to a certain tournament","ref":"MtgPula.Tournaments.html#list_all_tournament_players/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.list_all_tournament_players/1","doc":"iex> list_all_tournament_players(123)\n    [%Player{}, ...]","ref":"MtgPula.Tournaments.html#list_all_tournament_players/1-examples"},{"type":"function","title":"MtgPula.Tournaments.list_matches/0","doc":"Returns the list of matches.","ref":"MtgPula.Tournaments.html#list_matches/0"},{"type":"function","title":"Examples - MtgPula.Tournaments.list_matches/0","doc":"iex> list_matches()\n    [%Match{}, ...]","ref":"MtgPula.Tournaments.html#list_matches/0-examples"},{"type":"function","title":"MtgPula.Tournaments.list_players/0","doc":"Returns the list of players.","ref":"MtgPula.Tournaments.html#list_players/0"},{"type":"function","title":"Examples - MtgPula.Tournaments.list_players/0","doc":"iex> list_players()\n    [%Player{}, ...]","ref":"MtgPula.Tournaments.html#list_players/0-examples"},{"type":"function","title":"MtgPula.Tournaments.list_tournaments/0","doc":"Returns the list of tournaments.","ref":"MtgPula.Tournaments.html#list_tournaments/0"},{"type":"function","title":"Examples - MtgPula.Tournaments.list_tournaments/0","doc":"iex> list_tournaments()\n    [%Tournament{}, ...]","ref":"MtgPula.Tournaments.html#list_tournaments/0-examples"},{"type":"function","title":"MtgPula.Tournaments.list_tournaments_with_players_and_users/0","doc":"Lists tournaments with their players","ref":"MtgPula.Tournaments.html#list_tournaments_with_players_and_users/0"},{"type":"function","title":"Examples - MtgPula.Tournaments.list_tournaments_with_players_and_users/0","doc":"","ref":"MtgPula.Tournaments.html#list_tournaments_with_players_and_users/0-examples"},{"type":"function","title":"MtgPula.Tournaments.make_pairings/2","doc":"","ref":"MtgPula.Tournaments.html#make_pairings/2"},{"type":"function","title":"MtgPula.Tournaments.pair_next_round/1","doc":"Takes in tournament_id. Calculates current standings based on player performance.\nUpdates the current_round, to match the round we are currently in. Returns pairings for the current round.","ref":"MtgPula.Tournaments.html#pair_next_round/1"},{"type":"function","title":"MtgPula.Tournaments.prepare_matches/1","doc":"Takes in tournament_id. Pairs next round, through pair_next_round()\n(see pair_next_round/1) and creates matches in the database","ref":"MtgPula.Tournaments.html#prepare_matches/1"},{"type":"function","title":"MtgPula.Tournaments.standings_on_tournament/1","doc":"Returns standings with tiebreakers and points","ref":"MtgPula.Tournaments.html#standings_on_tournament/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.standings_on_tournament/1","doc":"iex> standings_on_tournament(123)\n    [%Player{}, ...]","ref":"MtgPula.Tournaments.html#standings_on_tournament/1-examples"},{"type":"function","title":"MtgPula.Tournaments.tournament_matches/1","doc":"","ref":"MtgPula.Tournaments.html#tournament_matches/1"},{"type":"function","title":"MtgPula.Tournaments.try_pairings/2","doc":"","ref":"MtgPula.Tournaments.html#try_pairings/2"},{"type":"function","title":"MtgPula.Tournaments.update_match/2","doc":"Updates a match.","ref":"MtgPula.Tournaments.html#update_match/2"},{"type":"function","title":"Examples - MtgPula.Tournaments.update_match/2","doc":"iex> update_match(match, %{field: new_value})\n    {:ok, %Match{}}\n\n    iex> update_match(match, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Tournaments.html#update_match/2-examples"},{"type":"function","title":"MtgPula.Tournaments.update_played/1","doc":"Creates a match.","ref":"MtgPula.Tournaments.html#update_played/1"},{"type":"function","title":"Examples - MtgPula.Tournaments.update_played/1","doc":"iex> create_match(%{field: value})\n    {:ok, %Match{}}\n\n    iex> create_match(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Tournaments.html#update_played/1-examples"},{"type":"function","title":"MtgPula.Tournaments.update_player/2","doc":"Updates a player.","ref":"MtgPula.Tournaments.html#update_player/2"},{"type":"function","title":"Examples - MtgPula.Tournaments.update_player/2","doc":"iex> update_player(player, %{field: new_value})\n    {:ok, %Player{}}\n\n    iex> update_player(player, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Tournaments.html#update_player/2-examples"},{"type":"function","title":"MtgPula.Tournaments.update_tournament/2","doc":"Updates a tournament.","ref":"MtgPula.Tournaments.html#update_tournament/2"},{"type":"function","title":"Examples - MtgPula.Tournaments.update_tournament/2","doc":"iex> update_tournament(tournament, %{field: new_value})\n    {:ok, %Tournament{}}\n\n    iex> update_tournament(tournament, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Tournaments.html#update_tournament/2-examples"},{"type":"module","title":"MtgPula.Tournaments.Match","doc":"Represents a match schema.\n\nThis schema is used to store match-related information, such as players, scores, and the winner.","ref":"MtgPula.Tournaments.Match.html"},{"type":"module","title":"Fields - MtgPula.Tournaments.Match","doc":"- `id` (binary_id): The unique identifier for the match (autogenerated).\n- `round` (integer): The round number of the match.\n- `player_1_wins` (integer): The number of wins for player 1 (default: 0).\n- `player_2_wins` (integer): The number of wins for player 2 (default: 0).\n- `is_draw` (boolean): Indicates if the match ended in a draw.\n- `inserted_at` (utc_datetime): The timestamp when the match was created.\n- `updated_at` (utc_datetime): The timestamp when the match was last updated.","ref":"MtgPula.Tournaments.Match.html#module-fields"},{"type":"module","title":"Relationships - MtgPula.Tournaments.Match","doc":"- `belongs_to :on_play`: The player who is on play. See [`Player Schema`](MtgPula.Tournaments.Player.html).\n- `belongs_to :player1`: The first player in the match. See [`Player Schema`](MtgPula.Tournaments.Player.html).\n- `belongs_to :player2`: The second player in the match. See [`Player Schema`](MtgPula.Tournaments.Player.html).\n- `belongs_to :winner`: The winner of the match. See [`Player Schema`](MtgPula.Tournaments.Player.html).\n- `belongs_to :tournament`: The tournament to which the match belongs. See [`Tournament Schema`](MtgPula.Tournaments.Tournament.html).","ref":"MtgPula.Tournaments.Match.html#module-relationships"},{"type":"module","title":"Examples - MtgPula.Tournaments.Match","doc":"# Creating a new match\n    attrs = %{round: 1, player1_id: \"player1_uuid\", player2_id: \"player2_uuid\"}\n    changeset = MtgPula.Tournaments.Match.changeset(%MtgPula.Tournaments.Match{}, attrs)\n\n    if changeset.valid? do\n      Repo.insert(changeset)\n    else\n      IO.inspect(changeset.errors)\n    end","ref":"MtgPula.Tournaments.Match.html#module-examples"},{"type":"function","title":"MtgPula.Tournaments.Match.changeset/2","doc":"Creates a changeset for a match.","ref":"MtgPula.Tournaments.Match.html#changeset/2"},{"type":"function","title":"Parameters - MtgPula.Tournaments.Match.changeset/2","doc":"- `match` (struct): The match struct to update.\n- `attrs` (map): A map of attributes to apply to the changeset.","ref":"MtgPula.Tournaments.Match.html#changeset/2-parameters"},{"type":"function","title":"Validations - MtgPula.Tournaments.Match.changeset/2","doc":"- Ensures required fields are present.\n- Automatically calculates the winner and draw status based on player wins.","ref":"MtgPula.Tournaments.Match.html#changeset/2-validations"},{"type":"function","title":"Examples - MtgPula.Tournaments.Match.changeset/2","doc":"iex> changeset(%MtgPula.Tournaments.Match{}, %{round: 1, player1_id: \"player1_uuid\"})\n    %Ecto.Changeset{...}\n\n    iex> changeset(%MtgPula.Tournaments.Match{}, %{round: nil})\n    %Ecto.Changeset{valid?: false, errors: [round: {\"can't be blank\", []}]}","ref":"MtgPula.Tournaments.Match.html#changeset/2-examples"},{"type":"module","title":"MtgPula.Tournaments.Player","doc":"Represents a player schema.\n\nThis schema is used to store player-related information, such as points, deck, and match history.","ref":"MtgPula.Tournaments.Player.html"},{"type":"module","title":"Fields - MtgPula.Tournaments.Player","doc":"- `id` (binary_id): The unique identifier for the player (autogenerated).\n- `deck` (string): The deck used by the player.\n- `opponents` (array of UUIDs): The list of opponents the player has faced.\n- `points` (integer): The total points earned by the player.\n- `had_bye` (boolean): Indicates if the player had a bye in any round.\n- `dropped` (boolean): Indicates if the player has dropped out of the tournament.\n- `omw` (float, virtual): Opponent match win percentage.\n- `gw` (float, virtual): Game win percentage.\n- `ogp` (float, virtual): Opponent game percentage.\n- `inserted_at` (utc_datetime): The timestamp when the player was created.\n- `updated_at` (utc_datetime): The timestamp when the player was last updated.","ref":"MtgPula.Tournaments.Player.html#module-fields"},{"type":"module","title":"Relationships - MtgPula.Tournaments.Player","doc":"- `belongs_to :tournament`: The tournament the player is participating in. See [`Tournament Schema`](MtgPula.Tournaments.Tournament.html).\n- `belongs_to :user`: The user associated with the player. See [`User Schema`](MtgPula.Users.User.html).\n- `has_many :matches_as_player1`: Matches where the player is player 1. See [`Match Schema`](MtgPula.Tournaments.Match.html).\n- `has_many :matches_as_player2`: Matches where the player is player 2. See [`Match Schema`](MtgPula.Tournaments.Match.html).\n- `has_many :matches_as_winner`: Matches where the player is the winner. See [`Match Schema`](MtgPula.Tournaments.Match.html).","ref":"MtgPula.Tournaments.Player.html#module-relationships"},{"type":"module","title":"Examples - MtgPula.Tournaments.Player","doc":"# Creating a new player\n    attrs = %{deck: \"Mono Red Aggro\", tournament_id: \"tournament_uuid\", user_id: \"user_uuid\"}\n    changeset = MtgPula.Tournaments.Player.changeset(%MtgPula.Tournaments.Player{}, attrs)\n\n    if changeset.valid? do\n      Repo.insert(changeset)\n    else\n      IO.inspect(changeset.errors)\n    end","ref":"MtgPula.Tournaments.Player.html#module-examples"},{"type":"function","title":"MtgPula.Tournaments.Player.changeset/2","doc":"Creates a changeset for a player.","ref":"MtgPula.Tournaments.Player.html#changeset/2"},{"type":"function","title":"Parameters - MtgPula.Tournaments.Player.changeset/2","doc":"- `player` (struct): The player struct to update.\n- `attrs` (map): A map of attributes to apply to the changeset.","ref":"MtgPula.Tournaments.Player.html#changeset/2-parameters"},{"type":"function","title":"Validations - MtgPula.Tournaments.Player.changeset/2","doc":"- Ensures required fields are present.\n- Enforces unique constraints for user and tournament associations.","ref":"MtgPula.Tournaments.Player.html#changeset/2-validations"},{"type":"function","title":"Examples - MtgPula.Tournaments.Player.changeset/2","doc":"iex> changeset(%MtgPula.Tournaments.Player{}, %{deck: \"Mono Red Aggro\"})\n    %Ecto.Changeset{...}\n\n    iex> changeset(%MtgPula.Tournaments.Player{}, %{deck: nil})\n    %Ecto.Changeset{valid?: false, errors: [deck: {\"can't be blank\", []}]}","ref":"MtgPula.Tournaments.Player.html#changeset/2-examples"},{"type":"module","title":"MtgPula.Tournaments.Tournament","doc":"Represents a tournament schema.\n\nThis schema is used to store tournament-related information, such as name, rounds, and players.","ref":"MtgPula.Tournaments.Tournament.html"},{"type":"module","title":"Fields - MtgPula.Tournaments.Tournament","doc":"- `id` (binary_id): The unique identifier for the tournament (autogenerated).\n- `name` (string): The name of the tournament.\n- `finished` (boolean): Indicates if the tournament is finished.\n- `current_round` (integer): The current round of the tournament.\n- `number_of_rounds` (integer): The total number of rounds in the tournament.\n- `join_code` (string): A unique code for players to join the tournament.\n- `inserted_at` (utc_datetime): The timestamp when the tournament was created.\n- `updated_at` (utc_datetime): The timestamp when the tournament was last updated.","ref":"MtgPula.Tournaments.Tournament.html#module-fields"},{"type":"module","title":"Relationships - MtgPula.Tournaments.Tournament","doc":"- `has_many :match`: The matches associated with the tournament. See [`Match Schema`](MtgPula.Tournaments.Match.html).\n- `has_many :player`: The players participating in the tournament. See [`Player Schema`](MtgPula.Tournaments.Player.html).\n- `belongs_to :user`: The user who created the tournament. See [`User Schema`](MtgPula.Users.User.html).","ref":"MtgPula.Tournaments.Tournament.html#module-relationships"},{"type":"module","title":"Examples - MtgPula.Tournaments.Tournament","doc":"# Creating a new tournament\n    attrs = %{name: \"Summer Cup\", number_of_rounds: 5}\n    changeset = MtgPula.Tournaments.Tournament.changeset(%MtgPula.Tournaments.Tournament{}, attrs)\n\n    if changeset.valid? do\n      Repo.insert(changeset)\n    else\n      IO.inspect(changeset.errors)\n    end","ref":"MtgPula.Tournaments.Tournament.html#module-examples"},{"type":"function","title":"MtgPula.Tournaments.Tournament.changeset/2","doc":"Creates a changeset for a tournament.","ref":"MtgPula.Tournaments.Tournament.html#changeset/2"},{"type":"function","title":"Parameters - MtgPula.Tournaments.Tournament.changeset/2","doc":"- `tournament` (struct): The tournament struct to update.\n- `attrs` (map): A map of attributes to apply to the changeset.","ref":"MtgPula.Tournaments.Tournament.html#changeset/2-parameters"},{"type":"function","title":"Validations - MtgPula.Tournaments.Tournament.changeset/2","doc":"- Ensures required fields are present.\n- Generates a unique join code if not provided.","ref":"MtgPula.Tournaments.Tournament.html#changeset/2-validations"},{"type":"function","title":"Examples - MtgPula.Tournaments.Tournament.changeset/2","doc":"iex> changeset(%MtgPula.Tournaments.Tournament{}, %{name: \"Summer Cup\"})\n    %Ecto.Changeset{...}\n\n    iex> changeset(%MtgPula.Tournaments.Tournament{}, %{name: nil})\n    %Ecto.Changeset{valid?: false, errors: [name: {\"can't be blank\", []}]}","ref":"MtgPula.Tournaments.Tournament.html#changeset/2-examples"},{"type":"module","title":"MtgPula.Users","doc":"The Users context.","ref":"MtgPula.Users.html"},{"type":"function","title":"MtgPula.Users.change_user/2","doc":"Returns an `%Ecto.Changeset{}` for tracking user changes.","ref":"MtgPula.Users.html#change_user/2"},{"type":"function","title":"Examples - MtgPula.Users.change_user/2","doc":"iex> change_user(user)\n    %Ecto.Changeset{data: %User{}}","ref":"MtgPula.Users.html#change_user/2-examples"},{"type":"function","title":"MtgPula.Users.create_user/2","doc":"Creates a user.","ref":"MtgPula.Users.html#create_user/2"},{"type":"function","title":"Examples - MtgPula.Users.create_user/2","doc":"iex> create_user(%{field: value})\n    {:ok, %User{}}\n\n    iex> create_user(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Users.html#create_user/2-examples"},{"type":"function","title":"MtgPula.Users.delete_user/1","doc":"Deletes a user.","ref":"MtgPula.Users.html#delete_user/1"},{"type":"function","title":"Examples - MtgPula.Users.delete_user/1","doc":"iex> delete_user(user)\n    {:ok, %User{}}\n\n    iex> delete_user(user)\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Users.html#delete_user/1-examples"},{"type":"function","title":"MtgPula.Users.get_user!/1","doc":"Gets a single user.\n\nRaises `Ecto.NoResultsError` if the User does not exist.","ref":"MtgPula.Users.html#get_user!/1"},{"type":"function","title":"Examples - MtgPula.Users.get_user!/1","doc":"iex> get_user!(123)\n    %User{}\n\n    iex> get_user!(456)\n    ** (Ecto.NoResultsError)","ref":"MtgPula.Users.html#get_user!/1-examples"},{"type":"function","title":"MtgPula.Users.list_users/0","doc":"Returns the list of users.","ref":"MtgPula.Users.html#list_users/0"},{"type":"function","title":"Examples - MtgPula.Users.list_users/0","doc":"iex> list_users()\n    [%User{}, ...]","ref":"MtgPula.Users.html#list_users/0-examples"},{"type":"function","title":"MtgPula.Users.update_user/2","doc":"Updates a user.","ref":"MtgPula.Users.html#update_user/2"},{"type":"function","title":"Examples - MtgPula.Users.update_user/2","doc":"iex> update_user(user, %{field: new_value})\n    {:ok, %User{}}\n\n    iex> update_user(user, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"MtgPula.Users.html#update_user/2-examples"},{"type":"module","title":"MtgPula.Users.User","doc":"Represents a user schema.\n\nThis schema is used to store user-related information, such as their full name, gender, and biography.","ref":"MtgPula.Users.User.html"},{"type":"module","title":"Fields - MtgPula.Users.User","doc":"- `id` (binary_id): The unique identifier for the user (autogenerated).\n- `full_name` (string): The full name of the user.\n- `gender` (string): The gender of the user.\n- `biography` (string): A short biography or description of the user.\n- `inserted_at` (utc_datetime): The timestamp when the user was created.\n- `updated_at` (utc_datetime): The timestamp when the user was last updated.","ref":"MtgPula.Users.User.html#module-fields"},{"type":"module","title":"Relationships - MtgPula.Users.User","doc":"- `belongs_to :account`: Each user is associated with an account. See [`Account Schema`](MtgPula.Accounts.Account.html).\n- `has_many :player`: A user can participate as a player in multiple tournaments. See [`Player Schema`](MtgPula.Tournaments.Player.html).\n- `has_many :tournament`: A user can organize multiple tournaments. See [`Tournament Schema`](MtgPula.Tournaments.Tournament.html).","ref":"MtgPula.Users.User.html#module-relationships"},{"type":"module","title":"Examples - MtgPula.Users.User","doc":"# Creating a new user\n    attrs = %{full_name: \"John Doe\", gender: \"Male\", biography: \"A passionate player\"}\n    changeset = MtgPula.Users.User.changeset(%MtgPula.Users.User{}, attrs)\n\n    if changeset.valid? do\n      Repo.insert(changeset)\n    else\n      IO.inspect(changeset.errors)\n    end","ref":"MtgPula.Users.User.html#module-examples"},{"type":"function","title":"MtgPula.Users.User.changeset/2","doc":"Creates a changeset for a user.","ref":"MtgPula.Users.User.html#changeset/2"},{"type":"function","title":"Parameters - MtgPula.Users.User.changeset/2","doc":"- `user` (struct): The user struct to update.\n- `attrs` (map): A map of attributes to apply to the changeset.","ref":"MtgPula.Users.User.html#changeset/2-parameters"},{"type":"function","title":"Validations - MtgPula.Users.User.changeset/2","doc":"- `full_name`: Must be present.\n- `gender`: Must be present.\n- `biography`: Optional.","ref":"MtgPula.Users.User.html#changeset/2-validations"},{"type":"function","title":"Examples - MtgPula.Users.User.changeset/2","doc":"iex> changeset(%MtgPula.Users.User{}, %{full_name: \"John Doe\", gender: \"Male\"})\n    %Ecto.Changeset{...}\n\n    iex> changeset(%MtgPula.Users.User{}, %{full_name: nil})\n    %Ecto.Changeset{valid?: false, errors: [full_name: {\"can't be blank\", []}]}","ref":"MtgPula.Users.User.html#changeset/2-examples"},{"type":"module","title":"MtgPulaWeb","doc":"The entrypoint for defining your web interface, such\nas controllers, components, channels, and so on.\n\nThis can be used in your application as:\n\n    use MtgPulaWeb, :controller\n    use MtgPulaWeb, :html\n\nThe definitions below will be executed for every controller,\ncomponent, etc, so keep them short and clean, focused\non imports, uses and aliases.\n\nDo NOT define functions inside the quoted expressions\nbelow. Instead, define additional modules and import\nthose modules here.","ref":"MtgPulaWeb.html"},{"type":"macro","title":"MtgPulaWeb.__using__/1","doc":"When used, dispatch to the appropriate controller/live_view/etc.","ref":"MtgPulaWeb.html#__using__/1"},{"type":"function","title":"MtgPulaWeb.channel/0","doc":"","ref":"MtgPulaWeb.html#channel/0"},{"type":"function","title":"MtgPulaWeb.controller/0","doc":"","ref":"MtgPulaWeb.html#controller/0"},{"type":"function","title":"MtgPulaWeb.router/0","doc":"","ref":"MtgPulaWeb.html#router/0"},{"type":"function","title":"MtgPulaWeb.static_paths/0","doc":"","ref":"MtgPulaWeb.html#static_paths/0"},{"type":"function","title":"MtgPulaWeb.verified_routes/0","doc":"","ref":"MtgPulaWeb.html#verified_routes/0"},{"type":"module","title":"MtgPulaWeb.AccountController","doc":"","ref":"MtgPulaWeb.AccountController.html"},{"type":"function","title":"MtgPulaWeb.AccountController.authorize_account/3","doc":"","ref":"MtgPulaWeb.AccountController.html#authorize_account/3"},{"type":"function","title":"MtgPulaWeb.AccountController.create/2","doc":"","ref":"MtgPulaWeb.AccountController.html#create/2"},{"type":"function","title":"MtgPulaWeb.AccountController.current_account/2","doc":"","ref":"MtgPulaWeb.AccountController.html#current_account/2"},{"type":"function","title":"MtgPulaWeb.AccountController.delete/2","doc":"","ref":"MtgPulaWeb.AccountController.html#delete/2"},{"type":"function","title":"MtgPulaWeb.AccountController.index/2","doc":"","ref":"MtgPulaWeb.AccountController.html#index/2"},{"type":"function","title":"MtgPulaWeb.AccountController.refresh_session/2","doc":"","ref":"MtgPulaWeb.AccountController.html#refresh_session/2"},{"type":"function","title":"MtgPulaWeb.AccountController.show/2","doc":"","ref":"MtgPulaWeb.AccountController.html#show/2"},{"type":"function","title":"MtgPulaWeb.AccountController.sign_in/2","doc":"","ref":"MtgPulaWeb.AccountController.html#sign_in/2"},{"type":"function","title":"MtgPulaWeb.AccountController.sign_out/2","doc":"","ref":"MtgPulaWeb.AccountController.html#sign_out/2"},{"type":"function","title":"MtgPulaWeb.AccountController.update/2","doc":"","ref":"MtgPulaWeb.AccountController.html#update/2"},{"type":"module","title":"MtgPulaWeb.AccountJSON","doc":"","ref":"MtgPulaWeb.AccountJSON.html"},{"type":"function","title":"MtgPulaWeb.AccountJSON.index/1","doc":"Renders a list of accounts.","ref":"MtgPulaWeb.AccountJSON.html#index/1"},{"type":"function","title":"MtgPulaWeb.AccountJSON.show2/1","doc":"","ref":"MtgPulaWeb.AccountJSON.html#show2/1"},{"type":"function","title":"MtgPulaWeb.AccountJSON.show/1","doc":"Renders a single account.","ref":"MtgPulaWeb.AccountJSON.html#show/1"},{"type":"function","title":"MtgPulaWeb.AccountJSON.show_full_account/1","doc":"","ref":"MtgPulaWeb.AccountJSON.html#show_full_account/1"},{"type":"module","title":"MtgPulaWeb.Auth.AuthorizedPlug","doc":"","ref":"MtgPulaWeb.Auth.AuthorizedPlug.html"},{"type":"function","title":"MtgPulaWeb.Auth.AuthorizedPlug.is_authorized/2","doc":"","ref":"MtgPulaWeb.Auth.AuthorizedPlug.html#is_authorized/2"},{"type":"module","title":"MtgPulaWeb.Auth.Guardian","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.after_encode_and_sign/4","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#after_encode_and_sign/4"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.after_sign_in/5","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#after_sign_in/5"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.authenticate/1","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#authenticate/1"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.authenticate/2","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#authenticate/2"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.before_sign_out/3","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#before_sign_out/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.build_claims/3","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#build_claims/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.config/0","doc":"Fetches the configuration for this module.","ref":"MtgPulaWeb.Auth.Guardian.html#config/0"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.config/2","doc":"Returns a resolved value of the configuration found at a key.\n\nSee `Guardian.Config.resolve_value/1`.","ref":"MtgPulaWeb.Auth.Guardian.html#config/2"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.decode_and_verify/3","doc":"Decodes and verifies a token using the configuration on the implementation\nmodule.\n\nSee `Guardian.decode_and_verify/4`.","ref":"MtgPulaWeb.Auth.Guardian.html#decode_and_verify/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.default_token_type/0","doc":"The default type of token for this module.","ref":"MtgPulaWeb.Auth.Guardian.html#default_token_type/0"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.encode_and_sign/3","doc":"Encodes the claims.\n\nSee `Guardian.encode_and_sign/4` for more information.","ref":"MtgPulaWeb.Auth.Guardian.html#encode_and_sign/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.exchange/4","doc":"Exchanges a token of one type for another.\n\nSee `Guardian.exchange` for more information.","ref":"MtgPulaWeb.Auth.Guardian.html#exchange/4"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.on_exchange/3","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#on_exchange/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.on_refresh/3","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#on_refresh/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.on_revoke/3","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#on_revoke/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.on_verify/3","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#on_verify/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.peek/1","doc":"Provides the content of the token but without verification\nof either the claims or the signature.\n\nClaims will be present at the `:claims` key.\n\nSee `Guardian.peek/2` for more information.","ref":"MtgPulaWeb.Auth.Guardian.html#peek/1"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.refresh/2","doc":"Refresh a token.\n\nSee `Guardian.refresh` for more information.","ref":"MtgPulaWeb.Auth.Guardian.html#refresh/2"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.resource_from_claims/1","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#resource_from_claims/1"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.resource_from_token/3","doc":"Fetch the resource and claims directly from a token.\n\nSee `Guardian.resource_from_token` for more information.","ref":"MtgPulaWeb.Auth.Guardian.html#resource_from_token/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.revoke/2","doc":"Revoke a token.\n\nSee `Guardian.revoke` for more information.","ref":"MtgPulaWeb.Auth.Guardian.html#revoke/2"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.sliding_cookie/3","doc":"If Guardian.Plug.SlidingCookie is used, this callback will be invoked to\nreturn the new claims, or an error (which will mean the cookie will not\nbe refreshed).","ref":"MtgPulaWeb.Auth.Guardian.html#sliding_cookie/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.subject_for_token/2","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#subject_for_token/2"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.verify_claims/2","doc":"","ref":"MtgPulaWeb.Auth.Guardian.html#verify_claims/2"},{"type":"module","title":"MtgPulaWeb.Auth.Guardian.Plug","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.authenticated?/2","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#authenticated?/2"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.clear_remember_me/2","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#clear_remember_me/2"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.current_claims/2","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#current_claims/2"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.current_resource/2","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#current_resource/2"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.current_token/2","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#current_token/2"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.implementation/0","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#implementation/0"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.put_current_claims/3","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#put_current_claims/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.put_current_resource/3","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#put_current_resource/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.put_current_token/3","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#put_current_token/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.put_session_token/3","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#put_session_token/3"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.remember_me/4","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#remember_me/4"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.remember_me_from_token/4","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#remember_me_from_token/4"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.sign_in/4","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#sign_in/4"},{"type":"function","title":"MtgPulaWeb.Auth.Guardian.Plug.sign_out/2","doc":"","ref":"MtgPulaWeb.Auth.Guardian.Plug.html#sign_out/2"},{"type":"module","title":"MtgPulaWeb.Auth.GuardianErrorHandler","doc":"","ref":"MtgPulaWeb.Auth.GuardianErrorHandler.html"},{"type":"function","title":"MtgPulaWeb.Auth.GuardianErrorHandler.auth_error/3","doc":"","ref":"MtgPulaWeb.Auth.GuardianErrorHandler.html#auth_error/3"},{"type":"module","title":"MtgPulaWeb.Auth.Pipeline","doc":"","ref":"MtgPulaWeb.Auth.Pipeline.html"},{"type":"function","title":"MtgPulaWeb.Auth.Pipeline.call/2","doc":"","ref":"MtgPulaWeb.Auth.Pipeline.html#call/2"},{"type":"function","title":"MtgPulaWeb.Auth.Pipeline.init/1","doc":"","ref":"MtgPulaWeb.Auth.Pipeline.html#init/1"},{"type":"module","title":"MtgPulaWeb.Auth.SetAccount","doc":"","ref":"MtgPulaWeb.Auth.SetAccount.html"},{"type":"function","title":"MtgPulaWeb.Auth.SetAccount.call/2","doc":"","ref":"MtgPulaWeb.Auth.SetAccount.html#call/2"},{"type":"function","title":"MtgPulaWeb.Auth.SetAccount.init/1","doc":"","ref":"MtgPulaWeb.Auth.SetAccount.html#init/1"},{"type":"module","title":"MtgPulaWeb.ChangesetJSON","doc":"","ref":"MtgPulaWeb.ChangesetJSON.html"},{"type":"function","title":"MtgPulaWeb.ChangesetJSON.error/1","doc":"Renders changeset errors.","ref":"MtgPulaWeb.ChangesetJSON.html#error/1"},{"type":"module","title":"MtgPulaWeb.DeafaultController","doc":"","ref":"MtgPulaWeb.DeafaultController.html"},{"type":"function","title":"MtgPulaWeb.DeafaultController.index/2","doc":"","ref":"MtgPulaWeb.DeafaultController.html#index/2"},{"type":"module","title":"MtgPulaWeb.Endpoint","doc":"","ref":"MtgPulaWeb.Endpoint.html"},{"type":"function","title":"MtgPulaWeb.Endpoint.broadcast/3","doc":"","ref":"MtgPulaWeb.Endpoint.html#broadcast/3"},{"type":"function","title":"MtgPulaWeb.Endpoint.broadcast!/3","doc":"","ref":"MtgPulaWeb.Endpoint.html#broadcast!/3"},{"type":"function","title":"MtgPulaWeb.Endpoint.broadcast_from/4","doc":"","ref":"MtgPulaWeb.Endpoint.html#broadcast_from/4"},{"type":"function","title":"MtgPulaWeb.Endpoint.broadcast_from!/4","doc":"","ref":"MtgPulaWeb.Endpoint.html#broadcast_from!/4"},{"type":"function","title":"MtgPulaWeb.Endpoint.call/2","doc":"","ref":"MtgPulaWeb.Endpoint.html#call/2"},{"type":"function","title":"MtgPulaWeb.Endpoint.child_spec/1","doc":"Returns the child specification to start the endpoint\nunder a supervision tree.","ref":"MtgPulaWeb.Endpoint.html#child_spec/1"},{"type":"function","title":"MtgPulaWeb.Endpoint.config/2","doc":"Returns the endpoint configuration for `key`\n\nReturns `default` if the key does not exist.","ref":"MtgPulaWeb.Endpoint.html#config/2"},{"type":"function","title":"MtgPulaWeb.Endpoint.config_change/2","doc":"Reloads the configuration given the application environment changes.","ref":"MtgPulaWeb.Endpoint.html#config_change/2"},{"type":"function","title":"MtgPulaWeb.Endpoint.host/0","doc":"Returns the host for the given endpoint.","ref":"MtgPulaWeb.Endpoint.html#host/0"},{"type":"function","title":"MtgPulaWeb.Endpoint.init/1","doc":"","ref":"MtgPulaWeb.Endpoint.html#init/1"},{"type":"function","title":"MtgPulaWeb.Endpoint.local_broadcast/3","doc":"","ref":"MtgPulaWeb.Endpoint.html#local_broadcast/3"},{"type":"function","title":"MtgPulaWeb.Endpoint.local_broadcast_from/4","doc":"","ref":"MtgPulaWeb.Endpoint.html#local_broadcast_from/4"},{"type":"function","title":"MtgPulaWeb.Endpoint.path/1","doc":"Generates the path information when routing to this endpoint.","ref":"MtgPulaWeb.Endpoint.html#path/1"},{"type":"function","title":"MtgPulaWeb.Endpoint.script_name/0","doc":"Generates the script name.","ref":"MtgPulaWeb.Endpoint.html#script_name/0"},{"type":"function","title":"MtgPulaWeb.Endpoint.server_info/1","doc":"Returns the address and port that the server is running on","ref":"MtgPulaWeb.Endpoint.html#server_info/1"},{"type":"function","title":"MtgPulaWeb.Endpoint.start_link/1","doc":"Starts the endpoint supervision tree.\n\nAll other options are merged into the endpoint configuration.","ref":"MtgPulaWeb.Endpoint.html#start_link/1"},{"type":"function","title":"MtgPulaWeb.Endpoint.static_integrity/1","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file\nin `priv/static`. Meant to be used for Subresource Integrity with CDNs.","ref":"MtgPulaWeb.Endpoint.html#static_integrity/1"},{"type":"function","title":"MtgPulaWeb.Endpoint.static_lookup/1","doc":"Returns a two item tuple with the first item being the `static_path`\nand the second item being the `static_integrity`.","ref":"MtgPulaWeb.Endpoint.html#static_lookup/1"},{"type":"function","title":"MtgPulaWeb.Endpoint.static_path/1","doc":"Generates a route to a static file in `priv/static`.","ref":"MtgPulaWeb.Endpoint.html#static_path/1"},{"type":"function","title":"MtgPulaWeb.Endpoint.static_url/0","doc":"Generates the static URL without any path information.\n\nIt uses the configuration under `:static_url` to generate\nsuch. It falls back to `:url` if `:static_url` is not set.","ref":"MtgPulaWeb.Endpoint.html#static_url/0"},{"type":"function","title":"MtgPulaWeb.Endpoint.struct_url/0","doc":"Generates the endpoint base URL but as a `URI` struct.\n\nIt uses the configuration under `:url` to generate such.\nUseful for manipulating the URL data and passing it to\nURL helpers.","ref":"MtgPulaWeb.Endpoint.html#struct_url/0"},{"type":"function","title":"MtgPulaWeb.Endpoint.subscribe/2","doc":"","ref":"MtgPulaWeb.Endpoint.html#subscribe/2"},{"type":"function","title":"MtgPulaWeb.Endpoint.unsubscribe/1","doc":"","ref":"MtgPulaWeb.Endpoint.html#unsubscribe/1"},{"type":"function","title":"MtgPulaWeb.Endpoint.url/0","doc":"Generates the endpoint base URL without any path information.\n\nIt uses the configuration under `:url` to generate such.","ref":"MtgPulaWeb.Endpoint.html#url/0"},{"type":"module","title":"MtgPulaWeb.ErrorJSON","doc":"This module is invoked by your endpoint in case of errors on JSON requests.\n\nSee config/config.exs.","ref":"MtgPulaWeb.ErrorJSON.html"},{"type":"function","title":"MtgPulaWeb.ErrorJSON.render/2","doc":"","ref":"MtgPulaWeb.ErrorJSON.html#render/2"},{"type":"module","title":"MtgPulaWeb.FallbackController","doc":"Translates controller action results into valid `Plug.Conn` responses.\n\nSee `Phoenix.Controller.action_fallback/1` for more details.","ref":"MtgPulaWeb.FallbackController.html"},{"type":"module","title":"MtgPulaWeb.Gettext","doc":"A module providing Internationalization with a gettext-based API.\n\nBy using [Gettext](https://hexdocs.pm/gettext),\nyour module gains a set of macros for translations, for example:\n\n    import MtgPulaWeb.Gettext\n\n    # Simple translation\n    gettext(\"Here is the string to translate\")\n\n    # Plural translation\n    ngettext(\"Here is the string to translate\",\n             \"Here are the strings to translate\",\n             3)\n\n    # Domain-based translation\n    dgettext(\"errors\", \"Here is the error message to translate\")\n\nSee the [Gettext Docs](https://hexdocs.pm/gettext) for detailed usage.","ref":"MtgPulaWeb.Gettext.html"},{"type":"macro","title":"MtgPulaWeb.Gettext.dgettext/3","doc":"","ref":"MtgPulaWeb.Gettext.html#dgettext/3"},{"type":"macro","title":"MtgPulaWeb.Gettext.dgettext_noop/2","doc":"","ref":"MtgPulaWeb.Gettext.html#dgettext_noop/2"},{"type":"macro","title":"MtgPulaWeb.Gettext.dngettext/5","doc":"","ref":"MtgPulaWeb.Gettext.html#dngettext/5"},{"type":"macro","title":"MtgPulaWeb.Gettext.dngettext_noop/3","doc":"","ref":"MtgPulaWeb.Gettext.html#dngettext_noop/3"},{"type":"macro","title":"MtgPulaWeb.Gettext.dpgettext/4","doc":"","ref":"MtgPulaWeb.Gettext.html#dpgettext/4"},{"type":"macro","title":"MtgPulaWeb.Gettext.dpgettext_noop/3","doc":"","ref":"MtgPulaWeb.Gettext.html#dpgettext_noop/3"},{"type":"macro","title":"MtgPulaWeb.Gettext.dpngettext/6","doc":"","ref":"MtgPulaWeb.Gettext.html#dpngettext/6"},{"type":"macro","title":"MtgPulaWeb.Gettext.dpngettext_noop/4","doc":"","ref":"MtgPulaWeb.Gettext.html#dpngettext_noop/4"},{"type":"macro","title":"MtgPulaWeb.Gettext.gettext/2","doc":"","ref":"MtgPulaWeb.Gettext.html#gettext/2"},{"type":"macro","title":"MtgPulaWeb.Gettext.gettext_comment/1","doc":"","ref":"MtgPulaWeb.Gettext.html#gettext_comment/1"},{"type":"macro","title":"MtgPulaWeb.Gettext.gettext_noop/1","doc":"","ref":"MtgPulaWeb.Gettext.html#gettext_noop/1"},{"type":"function","title":"MtgPulaWeb.Gettext.handle_missing_bindings/2","doc":"","ref":"MtgPulaWeb.Gettext.html#handle_missing_bindings/2"},{"type":"function","title":"MtgPulaWeb.Gettext.handle_missing_plural_translation/7","doc":"","ref":"MtgPulaWeb.Gettext.html#handle_missing_plural_translation/7"},{"type":"function","title":"MtgPulaWeb.Gettext.handle_missing_translation/5","doc":"","ref":"MtgPulaWeb.Gettext.html#handle_missing_translation/5"},{"type":"function","title":"MtgPulaWeb.Gettext.lgettext/5","doc":"","ref":"MtgPulaWeb.Gettext.html#lgettext/5"},{"type":"function","title":"MtgPulaWeb.Gettext.lngettext/7","doc":"","ref":"MtgPulaWeb.Gettext.html#lngettext/7"},{"type":"macro","title":"MtgPulaWeb.Gettext.ngettext/4","doc":"","ref":"MtgPulaWeb.Gettext.html#ngettext/4"},{"type":"macro","title":"MtgPulaWeb.Gettext.ngettext_noop/2","doc":"","ref":"MtgPulaWeb.Gettext.html#ngettext_noop/2"},{"type":"macro","title":"MtgPulaWeb.Gettext.pgettext/3","doc":"","ref":"MtgPulaWeb.Gettext.html#pgettext/3"},{"type":"macro","title":"MtgPulaWeb.Gettext.pgettext_noop/2","doc":"","ref":"MtgPulaWeb.Gettext.html#pgettext_noop/2"},{"type":"macro","title":"MtgPulaWeb.Gettext.pngettext/5","doc":"","ref":"MtgPulaWeb.Gettext.html#pngettext/5"},{"type":"macro","title":"MtgPulaWeb.Gettext.pngettext_noop/3","doc":"","ref":"MtgPulaWeb.Gettext.html#pngettext_noop/3"},{"type":"module","title":"MtgPulaWeb.MatchController","doc":"","ref":"MtgPulaWeb.MatchController.html"},{"type":"function","title":"MtgPulaWeb.MatchController.update_score_and_play/2","doc":"","ref":"MtgPulaWeb.MatchController.html#update_score_and_play/2"},{"type":"module","title":"MtgPulaWeb.MatchJSON","doc":"","ref":"MtgPulaWeb.MatchJSON.html"},{"type":"function","title":"MtgPulaWeb.MatchJSON.index/1","doc":"Renders a list of matches.","ref":"MtgPulaWeb.MatchJSON.html#index/1"},{"type":"function","title":"MtgPulaWeb.MatchJSON.show/1","doc":"Renders a single match.","ref":"MtgPulaWeb.MatchJSON.html#show/1"},{"type":"module","title":"MtgPulaWeb.PlayerController","doc":"","ref":"MtgPulaWeb.PlayerController.html"},{"type":"function","title":"MtgPulaWeb.PlayerController.create/2","doc":"","ref":"MtgPulaWeb.PlayerController.html#create/2"},{"type":"function","title":"MtgPulaWeb.PlayerController.delete/2","doc":"","ref":"MtgPulaWeb.PlayerController.html#delete/2"},{"type":"function","title":"MtgPulaWeb.PlayerController.index/2","doc":"","ref":"MtgPulaWeb.PlayerController.html#index/2"},{"type":"function","title":"MtgPulaWeb.PlayerController.show/2","doc":"","ref":"MtgPulaWeb.PlayerController.html#show/2"},{"type":"function","title":"MtgPulaWeb.PlayerController.update/2","doc":"","ref":"MtgPulaWeb.PlayerController.html#update/2"},{"type":"module","title":"MtgPulaWeb.PlayerJSON","doc":"","ref":"MtgPulaWeb.PlayerJSON.html"},{"type":"function","title":"MtgPulaWeb.PlayerJSON.index/1","doc":"Renders a list of players.","ref":"MtgPulaWeb.PlayerJSON.html#index/1"},{"type":"function","title":"MtgPulaWeb.PlayerJSON.show/1","doc":"Renders a single player.","ref":"MtgPulaWeb.PlayerJSON.html#show/1"},{"type":"module","title":"MtgPulaWeb.Presence","doc":"Provides presence tracking to channels and processes.\n\nSee the [`Phoenix.Presence`](https://hexdocs.pm/phoenix/Phoenix.Presence.html)\ndocs for more details.","ref":"MtgPulaWeb.Presence.html"},{"type":"function","title":"MtgPulaWeb.Presence.child_spec/1","doc":"","ref":"MtgPulaWeb.Presence.html#child_spec/1"},{"type":"function","title":"MtgPulaWeb.Presence.fetch/2","doc":"","ref":"MtgPulaWeb.Presence.html#fetch/2"},{"type":"function","title":"MtgPulaWeb.Presence.fetchers_pids/0","doc":"","ref":"MtgPulaWeb.Presence.html#fetchers_pids/0"},{"type":"function","title":"MtgPulaWeb.Presence.get_by_key/2","doc":"","ref":"MtgPulaWeb.Presence.html#get_by_key/2"},{"type":"function","title":"MtgPulaWeb.Presence.list/1","doc":"","ref":"MtgPulaWeb.Presence.html#list/1"},{"type":"function","title":"MtgPulaWeb.Presence.track/3","doc":"","ref":"MtgPulaWeb.Presence.html#track/3"},{"type":"function","title":"MtgPulaWeb.Presence.track/4","doc":"","ref":"MtgPulaWeb.Presence.html#track/4"},{"type":"function","title":"MtgPulaWeb.Presence.untrack/2","doc":"","ref":"MtgPulaWeb.Presence.html#untrack/2"},{"type":"function","title":"MtgPulaWeb.Presence.untrack/3","doc":"","ref":"MtgPulaWeb.Presence.html#untrack/3"},{"type":"function","title":"MtgPulaWeb.Presence.update/3","doc":"","ref":"MtgPulaWeb.Presence.html#update/3"},{"type":"function","title":"MtgPulaWeb.Presence.update/4","doc":"","ref":"MtgPulaWeb.Presence.html#update/4"},{"type":"module","title":"MtgPulaWeb.RoomChannel","doc":"","ref":"MtgPulaWeb.RoomChannel.html"},{"type":"function","title":"MtgPulaWeb.RoomChannel.child_spec/1","doc":"","ref":"MtgPulaWeb.RoomChannel.html#child_spec/1"},{"type":"function","title":"MtgPulaWeb.RoomChannel.handle_in/3","doc":"","ref":"MtgPulaWeb.RoomChannel.html#handle_in/3"},{"type":"function","title":"MtgPulaWeb.RoomChannel.handle_info/2","doc":"","ref":"MtgPulaWeb.RoomChannel.html#handle_info/2"},{"type":"function","title":"MtgPulaWeb.RoomChannel.join/3","doc":"Joins the lobby room.","ref":"MtgPulaWeb.RoomChannel.html#join/3"},{"type":"function","title":"MtgPulaWeb.RoomChannel.start_link/1","doc":"","ref":"MtgPulaWeb.RoomChannel.html#start_link/1"},{"type":"module","title":"MtgPulaWeb.Router","doc":"","ref":"MtgPulaWeb.Router.html"},{"type":"function","title":"MtgPulaWeb.Router.api/2","doc":"","ref":"MtgPulaWeb.Router.html#api/2"},{"type":"function","title":"MtgPulaWeb.Router.auth/2","doc":"","ref":"MtgPulaWeb.Router.html#auth/2"},{"type":"function","title":"MtgPulaWeb.Router.call/2","doc":"Callback invoked by Plug on every request.","ref":"MtgPulaWeb.Router.html#call/2"},{"type":"function","title":"MtgPulaWeb.Router.init/1","doc":"Callback required by Plug that initializes the router\nfor serving web requests.","ref":"MtgPulaWeb.Router.html#init/1"},{"type":"module","title":"MtgPulaWeb.Telemetry","doc":"","ref":"MtgPulaWeb.Telemetry.html"},{"type":"function","title":"MtgPulaWeb.Telemetry.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"MtgPulaWeb.Telemetry.html#child_spec/1"},{"type":"function","title":"MtgPulaWeb.Telemetry.metrics/0","doc":"","ref":"MtgPulaWeb.Telemetry.html#metrics/0"},{"type":"function","title":"MtgPulaWeb.Telemetry.start_link/1","doc":"","ref":"MtgPulaWeb.Telemetry.html#start_link/1"},{"type":"module","title":"MtgPulaWeb.TournamentChannel","doc":"Handles real-time communication for tournaments.\n\nThis channel allows clients to join tournament topics, manage players, update matches, and retrieve tournament-related data.","ref":"MtgPulaWeb.TournamentChannel.html"},{"type":"module","title":"Table of Handle_in Events - MtgPulaWeb.TournamentChannel","doc":"| **Event Name**         | **Description**                                                              | **Parameters**                                                                                     |\n|-------------------------|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------|\n| `\"get_user_by_email\"`   | Retrieves a user by their email address.                                    | - `email`: The email of the user.                                                                 |\n| `\"add_player\"`          | Adds a player to the tournament.                                            | - `user_id`: The ID of the user that you want to add.   - `deck`: The player's deck.                                    |\n| `\"get_players\"`         | Retrieves the list of players in the tournament.                            | None                                                                                               |\n| `\"remove_player\"`       | Removes a player from the tournament.                                       | - `player_id`: The ID of the player to remove.                                                    |\n| `\"update_player\"`       | Updates a player's details in the tournament.                               | - `player_id`: The ID of the player.  - Other fields to update (e.g., `deck`).                |\n| `\"prepare_matches\"`     | Prepares matches for the tournament.                                        | None                                                                                               |\n| `\"update_match\"`        | Updates match results in the tournament.                                    | - `id`: The match ID. - `player_1_wins`: Wins for player 1.  - `player_2_wins`: Wins for player 2. |\n| `\"current_matches\"`     | Retrieves the current matches for the tournament.                           | None                                                                                               |\n| `\"get_standings\"`       | Retrieves the standings for the tournament.                                 | - `join_code` (optional): The join code of the tournament.                                         |\n\n---","ref":"MtgPulaWeb.TournamentChannel.html#module-table-of-handle_in-events"},{"type":"module","title":"Event Reponses - MtgPulaWeb.TournamentChannel","doc":"| **Event Name**         | **Success Response**                                                                 | **Failure Response**                                                                 |\n|-------------------------|--------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------|\n| `\"get_user_by_email\"`   | `{:reply, {:ok, %{user_id: user_id}}, socket}`                                       | `{:reply, {:error, %{reason: \"User not found\"}}, socket}`                            |\n| `\"add_player\"`          | `{:reply, {:ok, %{player: player_json}}, socket}`                                   | `{:reply, {:error, %{reason: \"Player already exists or internal error\"}}, socket}`   |\n| `\"get_players\"`         | `{:reply, {:ok, %{players: players_json}}, socket}`                                 | `{:reply, {:error, %{reason: \"There is nothing found here\"}}, socket}`              |\n| `\"remove_player\"`       | `{:reply, {:ok, %{player: player_json}}, socket}`                                   | `{:reply, {:error, %{reason: \"Failed to remove player\"}}, socket}`                  |\n| `\"update_player\"`       | `{:reply, {:ok, %{player: player_json}}, socket}`                                   | `{:reply, {:error, %{reason: \"Failed to update player\"}}, socket}`                  |\n| `\"prepare_matches\"`     | `{:reply, {:ok, %{matches: matches_json}}, socket}`                                 | `{:reply, {:error, %{reason: \"You are not authorized to prepare matches\"}}, socket}`|\n| `\"update_match\"`        | `{:noreply, socket}`                                                                | `{:reply, {:error, %{reason: \"You are not authorized to update\"}}, socket}`         |\n| `\"current_matches\"`     | `{:reply, {:ok, %{matches: matches_json}}, socket}`                                 | `{:reply, {:error, %{reason: \"No matches found\"}}, socket}`                         |\n| `\"get_standings\"`       | `{:reply, {:ok, %{players: players_json}}, socket}`                                 | `{:reply, {:error, %{reason: \"Standings not found\"}}, socket}`                      |\n\n---","ref":"MtgPulaWeb.TournamentChannel.html#module-event-reponses"},{"type":"module","title":"Topics - MtgPulaWeb.TournamentChannel","doc":"- `\"tournament: \"`: Represents a specific tournament identified by its join code.","ref":"MtgPulaWeb.TournamentChannel.html#module-topics"},{"type":"module","title":"Examples - MtgPulaWeb.TournamentChannel","doc":"# Joining a tournament topic\n    socket = connect_to_socket()\n    push(socket, \"join\", %{join_code: \"123456\"})\n\n    # Adding a player\n    push(socket, \"add_player\", %{name: \"Alice\", deck: \"Blue Control\"})","ref":"MtgPulaWeb.TournamentChannel.html#module-examples"},{"type":"function","title":"MtgPulaWeb.TournamentChannel.child_spec/1","doc":"","ref":"MtgPulaWeb.TournamentChannel.html#child_spec/1"},{"type":"function","title":"MtgPulaWeb.TournamentChannel.handle_in/3","doc":"","ref":"MtgPulaWeb.TournamentChannel.html#handle_in/3"},{"type":"function","title":"MtgPulaWeb.TournamentChannel.handle_info/2","doc":"","ref":"MtgPulaWeb.TournamentChannel.html#handle_info/2"},{"type":"function","title":"MtgPulaWeb.TournamentChannel.join/3","doc":"","ref":"MtgPulaWeb.TournamentChannel.html#join/3"},{"type":"function","title":"MtgPulaWeb.TournamentChannel.start_link/1","doc":"","ref":"MtgPulaWeb.TournamentChannel.html#start_link/1"},{"type":"function","title":"MtgPulaWeb.TournamentChannel.translate_errors/1","doc":"","ref":"MtgPulaWeb.TournamentChannel.html#translate_errors/1"},{"type":"module","title":"MtgPulaWeb.TournamentChannelJSON","doc":"","ref":"MtgPulaWeb.TournamentChannelJSON.html"},{"type":"function","title":"MtgPulaWeb.TournamentChannelJSON.render/1","doc":"","ref":"MtgPulaWeb.TournamentChannelJSON.html#render/1"},{"type":"function","title":"MtgPulaWeb.TournamentChannelJSON.render/2","doc":"","ref":"MtgPulaWeb.TournamentChannelJSON.html#render/2"},{"type":"module","title":"MtgPulaWeb.TournamentController","doc":"","ref":"MtgPulaWeb.TournamentController.html"},{"type":"function","title":"MtgPulaWeb.TournamentController.create/2","doc":"","ref":"MtgPulaWeb.TournamentController.html#create/2"},{"type":"function","title":"MtgPulaWeb.TournamentController.current_matches/2","doc":"","ref":"MtgPulaWeb.TournamentController.html#current_matches/2"},{"type":"function","title":"MtgPulaWeb.TournamentController.delete/2","doc":"","ref":"MtgPulaWeb.TournamentController.html#delete/2"},{"type":"function","title":"MtgPulaWeb.TournamentController.index/2","doc":"","ref":"MtgPulaWeb.TournamentController.html#index/2"},{"type":"function","title":"MtgPulaWeb.TournamentController.prepare_next_round/2","doc":"","ref":"MtgPulaWeb.TournamentController.html#prepare_next_round/2"},{"type":"function","title":"MtgPulaWeb.TournamentController.show/2","doc":"","ref":"MtgPulaWeb.TournamentController.html#show/2"},{"type":"function","title":"MtgPulaWeb.TournamentController.show_standings/2","doc":"","ref":"MtgPulaWeb.TournamentController.html#show_standings/2"},{"type":"function","title":"MtgPulaWeb.TournamentController.tournament_matches/2","doc":"","ref":"MtgPulaWeb.TournamentController.html#tournament_matches/2"},{"type":"function","title":"MtgPulaWeb.TournamentController.update/2","doc":"","ref":"MtgPulaWeb.TournamentController.html#update/2"},{"type":"module","title":"MtgPulaWeb.TournamentJSON","doc":"","ref":"MtgPulaWeb.TournamentJSON.html"},{"type":"function","title":"MtgPulaWeb.TournamentJSON.index/1","doc":"Renders a list of tournaments.","ref":"MtgPulaWeb.TournamentJSON.html#index/1"},{"type":"function","title":"MtgPulaWeb.TournamentJSON.show/1","doc":"Renders a single tournament.","ref":"MtgPulaWeb.TournamentJSON.html#show/1"},{"type":"function","title":"MtgPulaWeb.TournamentJSON.show_matches/1","doc":"","ref":"MtgPulaWeb.TournamentJSON.html#show_matches/1"},{"type":"function","title":"MtgPulaWeb.TournamentJSON.show_matches_deck/1","doc":"","ref":"MtgPulaWeb.TournamentJSON.html#show_matches_deck/1"},{"type":"function","title":"MtgPulaWeb.TournamentJSON.show_pairings/1","doc":"","ref":"MtgPulaWeb.TournamentJSON.html#show_pairings/1"},{"type":"function","title":"MtgPulaWeb.TournamentJSON.show_standings/1","doc":"","ref":"MtgPulaWeb.TournamentJSON.html#show_standings/1"},{"type":"module","title":"MtgPulaWeb.UserController","doc":"","ref":"MtgPulaWeb.UserController.html"},{"type":"function","title":"MtgPulaWeb.UserController.create/2","doc":"","ref":"MtgPulaWeb.UserController.html#create/2"},{"type":"function","title":"MtgPulaWeb.UserController.delete/2","doc":"","ref":"MtgPulaWeb.UserController.html#delete/2"},{"type":"function","title":"MtgPulaWeb.UserController.index/2","doc":"","ref":"MtgPulaWeb.UserController.html#index/2"},{"type":"function","title":"MtgPulaWeb.UserController.show/2","doc":"","ref":"MtgPulaWeb.UserController.html#show/2"},{"type":"function","title":"MtgPulaWeb.UserController.update/2","doc":"","ref":"MtgPulaWeb.UserController.html#update/2"},{"type":"module","title":"MtgPulaWeb.UserJSON","doc":"","ref":"MtgPulaWeb.UserJSON.html"},{"type":"function","title":"MtgPulaWeb.UserJSON.data/1","doc":"","ref":"MtgPulaWeb.UserJSON.html#data/1"},{"type":"function","title":"MtgPulaWeb.UserJSON.index/1","doc":"Renders a list of users.","ref":"MtgPulaWeb.UserJSON.html#index/1"},{"type":"function","title":"MtgPulaWeb.UserJSON.show/1","doc":"Renders a single user.","ref":"MtgPulaWeb.UserJSON.html#show/1"},{"type":"module","title":"MtgPulaWeb.UserSocket","doc":"","ref":"MtgPulaWeb.UserSocket.html"},{"type":"function","title":"MtgPulaWeb.UserSocket.connect/3","doc":"","ref":"MtgPulaWeb.UserSocket.html#connect/3"},{"type":"function","title":"MtgPulaWeb.UserSocket.id/1","doc":"","ref":"MtgPulaWeb.UserSocket.html#id/1"},{"type":"exception","title":"MtgPulaWeb.Auth.ErrorResponse.Forbidden","doc":"","ref":"MtgPulaWeb.Auth.ErrorResponse.Forbidden.html"},{"type":"exception","title":"MtgPulaWeb.Auth.ErrorResponse.NotFound","doc":"","ref":"MtgPulaWeb.Auth.ErrorResponse.NotFound.html"},{"type":"exception","title":"MtgPulaWeb.Auth.ErrorResponse.Unauthorized","doc":"","ref":"MtgPulaWeb.Auth.ErrorResponse.Unauthorized.html"},{"type":"exception","title":"MtgPulaWeb.Tournament.ErrorResponse.Finished","doc":"","ref":"MtgPulaWeb.Tournament.ErrorResponse.Finished.html"},{"type":"exception","title":"MtgPulaWeb.Tournament.ErrorResponse.NotFound","doc":"","ref":"MtgPulaWeb.Tournament.ErrorResponse.NotFound.html"},{"type":"extras","title":"MTG Pula API Documentation","doc":"# MTG Pula API Documentation","ref":"readme-exdoc.html"},{"type":"extras","title":"Overview - MTG Pula API Documentation","doc":"MTG Pula is a platform for managing Magic: The Gathering tournaments. Below is a diagram of the system architecture:\n\n![System Architecture](https://i.imgur.com/Tqxzsgs.png \"System Architecture\")\n![Use Case Diagram](https://i.imgur.com/K23zIxl.png \"Use Case diagram\")","ref":"readme-exdoc.html#overview"},{"type":"extras","title":"Features - MTG Pula API Documentation","doc":"- User authentication and authorization\n- Tournament creation and management\n- Real-time updates via Phoenix Channels\n\n## **Schemas**\n\n### **1. [Account Schema](MtgPula.Accounts.Account.html)**\n- Represents an account in the system.\n- Stores account-related information such as email and hashed passwords.\n\n### **2. [User Schema](MtgPula.Users.User.html)**\n- Represents a user in the system.\n- Stores user-related information such as full name, gender, and biography.\n\n### **3. [Tournament Schema](MtgPula.Tournaments.Tournament.html)**\n- Represents a tournament.\n- Stores tournament-related information such as name, rounds, and players.\n\n### **4. [Player Schema](MtgPula.Tournaments.Player.html)**\n- Represents a player participating in a tournament.\n- Stores player-related information such as points, deck, and match history.\n\n### **5. [Match Schema](MtgPula.Tournaments.Match.html)**\n- Represents a match between players in a tournament.\n- Stores match-related information such as players, scores, and the winner.\n\n---\n## **Phoenix Channel Documentation**\n---\n\n  - Tournamemnt channels track **[Presence](https://hexdocs.pm/phoenix/js/#presence)**.\n  - You can see all events that can be used **[HERE](MtgPulaWeb.TournamentChannel.html)**\n  - If you are using Node based framework, I recommend connecting by **[Phoenix Channels JavaScript client](https://www.npmjs.com/package phoenix-channels)**\n .\n\n### **Example**\n  ```\n  \n  const { Socket } = require('phoenix-channels')\n  //connect to socket\n  let socket = new Socket(baseURL, { params: { token: userToken },})\n\n  socket.connect()\n\n  // Now that you are connected, you can join channels with\n   a topic for example a tournament with join_code of 12345:\n  let channel = socket.channel(\"tournament:12345\", {})\n  channel.join()\n    .receive(\"ok\", resp => { console.log(\"Joined successfully\", resp) })\n    .receive(\"error\", resp => { console.log(\"Unable to join\", resp) })\n  //push an event to socket\n  channel.push(\"add_player\", {user_id: \"any_id\", deck: \"deck\"})\n            .receive(\"ok\", resp => resolve(resp))\n            .receive(\"error\", resp => reject(resp));\n  ```\n\n\n\n## **REST API Documentation**\n\nThese are all exposed that can be used to access data and modify it. Authentication is done by jwt.\n \n---\n\n\n\n\n### **Public Endpoints (No Authentication Required)**\n\n#### **1. GET `/api/`**\n- **Description**: Health check endpoint to verify the API is running.\n- **Request**: No parameters required.\n- **Response**:\n  ```text\n  MTG PULA IS LIVE!\n  ```\n\n---\n\n#### **2. POST `/api/accounts/create`**\n- **Description**: Creates a new account.\n- **Request**:\n  - **Body Parameters**:\n    ```json\n    {\n      \"account\": {\n        \"email\": \"user@example.com\",\n        \"hash_password\": \"password123\"\n      }\n    }\n    ```\n- **Response**:\n  ```json\n  {\n    \"id\": \"account_id\",\n    \"email\": \"user@example.com\",\n    \"token\": \"jwt_token\"\n  }\n  ```\n\n---\n\n#### **3. POST `/api/accounts/sign_in`**\n- **Description**: Authenticates a user and returns a JWT token.\n- **Request**:\n  - **Body Parameters**:\n    ```json\n    {\n      \"email\": \"user@example.com\",\n      \"hash_password\": \"password123\"\n    }\n    ```\n- **Response**:\n  ```json\n  {\n    \"id\": \"account_id\",\n    \"email\": \"user@example.com\",\n    \"token\": \"jwt_token\"\n  }\n  ```\n\n---\n\n#### **4. GET `/api/tournaments/standings/by_id/:id`**\n- **Description**: Retrieves the standings for a specific tournament by its ID.\n- **Request**:\n  - **Path Parameters**:\n    - `id` (string, required): The ID of the tournament.\n- **Response**:\n  ```json\n  {\n    \"standings\": [\n      {\n        \"id\": \"player_id\",\n        \"user_id\": \"user_id\",\n        \"full_name\": \"John Doe\",\n        \"deck\": \"Mono Red Aggro\",\n        \"points\": 15\n      }\n    ]\n  }\n  ```\n\n---\n\n#### **5. GET `/api/tournaments`**\n- **Description**: Retrieves a list of all tournaments.\n- **Request**: No parameters required.\n- **Response**:\n  ```json\n  {\n    \"tournaments\": [\n      {\n        \"id\": \"tournament_id\",\n        \"name\": \"Summer Cup\",\n        \"current_round\": 1,\n        \"number_of_rounds\": 5,\n        \"join_code\": \"ABC123\",\n        \"finished\": false\n      }\n    ]\n  }\n  ```\n#### **6. GET `/api/tournaments/matches/by_join_code/:join_code`**\n- **Description**: Retrieves all matches for a tournament using its join code.\n- **Request**:\n  - **Path Parameters**:\n    - `join_code` (string, required): The join code of the tournament.\n- **Response**:\n  ```json\n  {\n    \"data\": [\n      {\n        \"match_id\": \"match_id\",\n        \"round\": 1,\n        \"player1_id\": \"player1_id\",\n        \"player1_fullname\": \"John Doe\",\n        \"player_1_wins\": 2,\n        \"player_2_wins\": 1,\n        \"player2_id\": \"player2_id\",\n        \"player2_fullname\": \"Jane Smith\"\n      },\n      {\n        \"match_id\": \"match_id_2\",\n        \"round\": 1,\n        \"player1_id\": \"player3_id\",\n        \"player1_fullname\": \"Alice Johnson\",\n        \"bye\": true\n      }\n    ]\n  }\n  ```\n- **Error Response**:\n  ```json\n  {\n    \"errors\": \"Pairings for this tournament not found\"\n  }\n  ```\n\n---\n\n\n### **Protected Endpoints (Require JWT Authentication)**\n\n### **Authentication**\n\nThese endpoints are protected and require a valid JWT token for access. For these endpoints, include the following header in your requests:\n\n```\nAuthorization: Bearer  \n```\n\n---\n#### **7. GET `/api/accounts/by_id/:id`**\n- **Description**: Retrieves account details by ID.\n- **Authentication**: Requires JWT.\n- **Request**:\n  - **Path Parameters**:\n    - `id` (string, required): The ID of the account.\n- **Response**:\n  ```json\n  {\n    \"id\": \"account_id\",\n    \"email\": \"user@example.com\",\n    \"user\": {\n      \"id\": \"user_id\",\n      \"full_name\": \"John Doe\",\n      \"gender\": \"male\",\n      \"biography\": \"Avid MTG player\"\n    }\n  }\n  ```\n\n---\n\n#### **8. GET `/api/accounts/current`**\n- **Description**: Retrieves the currently authenticated account.\n- **Authentication**: Requires JWT.\n- **Request**: No parameters required.\n- **Response**:\n  ```json\n  {\n    \"id\": \"account_id\",\n    \"email\": \"user@example.com\",\n    \"user\": {\n      \"id\": \"user_id\",\n      \"full_name\": \"John Doe\",\n      \"gender\": \"male\",\n      \"biography\": \"Avid MTG player\"\n    }\n  }\n  ```\n\n---\n\n#### **9. PATCH `/api/accounts/update`**\n- **Description**: Updates account details.\n- **Authentication**: Requires JWT.\n- **Request**:\n  - **Body Parameters**:\n    ```json\n    {\n      \"account\": {\n        \"email\": \"new_email@example.com\",\n        \"hash_password\": \"new_password\"\n      }\n    }\n    ```\n- **Response**:\n  ```json\n  {\n    \"id\": \"account_id\",\n    \"email\": \"new_email@example.com\"\n  }\n  ```\n\n---\n\n#### **10. POST `/api/accounts/sign_out`**\n- **Description**: Signs out the currently authenticated account.\n- **Authentication**: Requires JWT.\n- **Request**: No parameters required.\n- **Response**:\n  ```json\n  {\n    \"message\": \"Signed out successfully\"\n  }\n  ```\n\n---\n\n#### **11. POST `/api/accounts/refresh_session`**\n- **Description**: Refreshes the session token for the authenticated account.\n- **Authentication**: Requires JWT.\n- **Request**: No parameters required.\n- **Response**:\n  ```json\n  {\n    \"token\": \"new_jwt_token\"\n  }\n  ```\n\n---\n\n#### **12. PUT `/api/users/update`**\n- **Description**: Updates user details.\n- **Authentication**: Requires JWT.\n- **Request**:\n  - **Body Parameters**:\n    ```json\n    {\n      \"user\": {\n        \"full_name\": \"Jane Doe\",\n        \"gender\": \"female\",\n        \"biography\": \"MTG enthusiast\"\n      }\n    }\n    ```\n- **Response**:\n  ```json\n  {\n    \"id\": \"user_id\",\n    \"full_name\": \"Jane Doe\",\n    \"gender\": \"female\",\n    \"biography\": \"MTG enthusiast\"\n  }\n  ```\n\n---\n\n#### **13. POST `/api/tournaments/create`**\n- **Description**: Creates a new tournament.\n- **Authentication**: Requires JWT.\n- **Request**:\n  - **Body Parameters**:\n    ```json\n    {\n      \"tournament\": {\n        \"name\": \"Summer Cup\",\n        \"number_of_rounds\": 5\n      }\n    }\n    ```\n- **Response**:\n  ```json\n  {\n    \"id\": \"tournament_id\",\n    \"name\": \"Summer Cup\",\n    \"current_round\": 0,\n    \"number_of_rounds\": 5,\n    \"join_code\": \"ABC123\",\n    \"finished\": false\n  }\n  ```\n\n---\n\n#### **14. POST `/api/tournaments/add_player`**\n- **Description**: Adds a player to a tournament.\n- **Authentication**: Requires JWT.\n- **Request**:\n  - **Body Parameters**:\n    ```json\n    {\n      \"player\": {\n        \"tournament_id\": \"tournament_id\",\n        \"user_id\": \"user_id\",\n        \"deck\": \"Mono Red Aggro\"\n      }\n    }\n    ```\n- **Response**:\n  ```json\n  {\n    \"id\": \"player_id\",\n    \"deck\": \"Mono Red Aggro\",\n    \"points\": 0,\n    \"had_bye\": false\n  }\n  ```\n\n---\n\n#### **15. GET `/api/tournaments/prepare_round/:tournament_id`**\n- **Description**: Prepares the next round for a tournament.\n- **Authentication**: Requires JWT.\n- **Request**:\n  - **Path Parameters**:\n    - `tournament_id` (string, required): The ID of the tournament.\n- **Response**:\n  ```json\n  {\n    \"data\": [\n      {\n        \"match_id\": \"match_id\",\n        \"player1_id\": \"player1_id\",\n        \"player2_id\": \"player2_id\",\n        \"round\": 2\n      }\n    ]\n  }\n  ```\n\n---\n\n#### **16. GET `/api/tournaments/current_matches/:tournament_id`**\n- **Description**: Retrieves the current matches for a tournament.\n- **Authentication**: Requires JWT.\n- **Request**:\n  - **Path Parameters**:\n    - `tournament_id` (string, required): The ID of the tournament.\n- **Response**:\n  ```json\n  {\n    \"matches\": [\n      {\n        \"match_id\": \"match_id\",\n        \"player1_id\": \"player1_id\",\n        \"player2_id\": \"player2_id\",\n        \"round\": 2\n      }\n    ]\n  }\n  ```\n\n---\n\n#### **17. PATCH `/api/tournaments/matches/:id`**\n- **Description**: Updates the score and play status of a match.\n- **Authentication**: Requires JWT.\n- **Request**:\n  - **Path Parameters**:\n    - `id` (string, required): The ID of the match.\n  - **Body Parameters**:\n    ```json\n    {\n      \"match\": {\n        \"player_1_wins\": 2,\n        \"player_2_wins\": 1,\n        \"on_play_id\": \"player1_id\"\n      }\n    }\n    ```\n- **Response**:\n  ```json\n  {\n    \"id\": \"match_id\",\n    \"round\": 1,\n    \"player_1_wins\": 2,\n    \"player_2_wins\": 1,\n    \"player1_id\": \"player1_id\",\n    \"player2_id\": \"player2_id\",\n    \"on_play_id\": \"player1_id\"\n  }\n  ```\n\n---","ref":"readme-exdoc.html#features"}],"content_type":"text/markdown","proglang":"elixir","producer":{"name":"ex_doc","version":"0.37.3"}}